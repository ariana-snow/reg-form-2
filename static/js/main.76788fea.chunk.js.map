{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","Component","validEmailRegex","RegExp","Register","props","handleChange","event","preventDefault","target","name","value","errors","state","fullName","length","email","test","password","setState","handleSubmit","valid","Object","values","forEach","val","validateForm","console","error","info","this","className","onSubmit","noValidate","htmlFor","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAGMA,E,4JACJ,WACE,OACE,cAAC,EAAD,Q,GAHYC,aAQZC,EAAkBC,OAAO,0HASzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAaRC,aAAe,SAACC,GACdA,EAAMC,iBACN,MAAwBD,EAAME,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACVC,EAAS,EAAKC,MAAMD,OAExB,OAAQF,GACN,IAAK,WACHE,EAAOE,SACLH,EAAMI,OAAS,EACX,uCACA,GACN,MACF,IAAK,QACHH,EAAOI,MACLd,EAAgBe,KAAKN,GACjB,GACA,sBACN,MACF,IAAK,WACHC,EAAOM,SACLP,EAAMI,OAAS,EACX,sCACA,GAMV,EAAKI,SAAL,aAAeP,UAASF,EAAOC,KA1Cd,EA6CnBS,aAAe,SAACb,GACdA,EAAMC,kBAvDW,SAACI,GACpB,IAAIS,GAAQ,EAIZ,OAHAC,OAAOC,OAAOX,GAAQY,SACpB,SAACC,GAAD,OAASA,EAAIV,OAAS,IAAMM,GAAQ,MAE/BA,EAmDFK,CAAa,EAAKb,MAAMD,QAGzBe,QAAQC,MAAM,gBAFdD,QAAQE,KAAK,eA9Cf,EAAKhB,MAAQ,CACXC,SAAU,KACVE,MAAO,KACPE,SAAU,KACVN,OAAQ,CACNE,SAAU,GACVE,MAAO,GACPE,SAAU,KATG,E,0CAsDnB,WACE,IAAON,EAAUkB,KAAKjB,MAAfD,OACP,OACE,qBAAKmB,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAf,UACE,gDACA,uBAAMC,SAAUF,KAAKV,aAAca,YAAU,EAA7C,UACE,sBAAKF,UAAU,WAAf,UACE,uBAAOG,QAAQ,WAAf,uBACA,uBAAOC,KAAK,OAAOzB,KAAK,WAAW0B,SAAUN,KAAKxB,aAAc2B,YAAU,IACzErB,EAAOE,SAASC,OAAS,GACxB,sBAAMgB,UAAU,QAAhB,SAAyBnB,EAAOE,cAEpC,sBAAKiB,UAAU,QAAf,UACE,uBAAOG,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQzB,KAAK,QAAQ0B,SAAUN,KAAKxB,aAAc2B,YAAU,IACvErB,EAAOI,MAAMD,OAAS,GACrB,sBAAMgB,UAAU,QAAhB,SAAyBnB,EAAOI,WAEpC,sBAAKe,UAAU,WAAf,UACE,uBAAOG,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWzB,KAAK,WAAW0B,SAAUN,KAAKxB,aAAc2B,YAAU,IAC7ErB,EAAOM,SAASH,OAAS,GACxB,sBAAMgB,UAAU,QAAhB,SAAyBnB,EAAOM,cAEpC,qBAAKa,UAAU,SAEf,qBAAKA,UAAU,SAAf,SACE,wBAAQI,KAAK,SAAb,qC,GAnFSlC,aA4FRD,ICpGAqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76788fea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Register />\n    );\n  }\n}\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach(\n    (val) => val.length > 0 && (valid = false)\n  );\n  return valid;\n}\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: null,\n      email: null,\n      password: null,\n      errors: {\n        fullName: '',\n        email: '',\n        password: '',\n      }\n    };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'fullName': \n        errors.fullName = \n          value.length < 4\n            ? 'Full Name must be 4 characters long!'\n            : '';\n        break;\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 8\n            ? 'Password must be 8 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value});\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if(validateForm(this.state.errors)) {\n      console.info('Valid Form')\n    }else{\n      console.error('Invalid Form')\n    }\n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <div className='wrapper'>\n        <div className='form-wrapper'>\n          <h2>Register here:</h2>\n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className='fullName'>\n              <label htmlFor=\"fullName\">Full Name</label>\n              <input type='text' name='fullName' onChange={this.handleChange} noValidate />\n              {errors.fullName.length > 0 && \n                <span className='error'>{errors.fullName}</span>}\n            </div>\n            <div className='email'>\n              <label htmlFor=\"email\">Email</label>\n              <input type='email' name='email' onChange={this.handleChange} noValidate />\n              {errors.email.length > 0 && \n                <span className='error'>{errors.email}</span>}\n            </div>\n            <div className='password'>\n              <label htmlFor=\"password\">Password</label>\n              <input type='password' name='password' onChange={this.handleChange} noValidate />\n              {errors.password.length > 0 && \n                <span className='error'>{errors.password}</span>}\n            </div>\n            <div className='info'>\n            </div>\n            <div className='submit'>\n              <button type=\"submit\">Register!</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}